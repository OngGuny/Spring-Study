<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:security="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

   <bean id="customLoginSuccess"
      class="kr.kwangan2.security.handler.CustomLoginSuccessHandler"></bean>
   <!-- <bean id="customPasswordEncoder" class = "kr.kwangan2.security.encoder.CustomNoOpPasswordEncoder"></bean> -->
   <bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
   <bean id="customUserDetailsService" class="kr.kwangan2.security.service.CustomUserDetailsService"/>
   <security:http>

      <security:intercept-url pattern="/all"
         access="permitAll" />

      <security:intercept-url
         pattern="/member" access="hasRole('ROLE_MEMBER')" />
      <security:intercept-url pattern="/admin"
         access="hasRole('ROLE_ADMIN')" />

      <!-- <security:form-login/> -->
      <security:form-login login-page="/customLogin"
         authentication-success-handler-ref="customLoginSuccess" />
      <security:access-denied-handler
         error-page="/accessError" />

      <security:csrf disabled="true" />

<!--       <security:logout logout-url="/customLogout" -->
<!--          invalidate-session="true" /> -->
         
         <security:remember-me data-source-ref="dataSource" token-validity-seconds="10000" />
         <security:logout 
         	logout-url="/customLogout"
         	invalidate-session="true"
         	delete-cookies="remember-me,JSESSIONID"
         />
         
         
   </security:http>



   <security:authentication-manager>
      <security:authentication-provider user-service-ref="customUserDetailsService">
         <security:password-encoder ref="bcryptPasswordEncoder"/>
         

         <!-- get user by database -->
<!--          <security:jdbc-user-service data-source-ref="dataSource" /> -->

<!--          <security:jdbc-user-service data-source-ref="dataSource"  -->
<!--          users-by-username-query=" select userid, userpw, enabled from tbl_member where userid = ? " -->
<!--          authorities-by-username-query=" select userid, auth from tbl_member_auth where userid = ? "  -->
<!--          /> -->

<!--          <security:password-encoder -->
<!--             ref="customPasswordEncoder" /> -->
<!--          <security:password-encoder ref="bcryptPasswordEncoder"/> -->
         <!-- make user -->
         <!-- <security:user-service> <security:user name="member" password="{noop}member" 
            authorities="ROLE_MEMBER"/> <security:user name="admin" password="{noop}admin" 
            authorities="ROLE_MEMBER,ROLE_ADMIN"/> </security:user-service> -->
      </security:authentication-provider>
      

   </security:authentication-manager>



</beans>